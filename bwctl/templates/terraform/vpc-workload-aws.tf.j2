{% if fabric in state['fabric'] %}
{% for node_key, node_val in state['fabric'][fabric]['workload'].items() %}
{% if 'aws' in state['fabric'][fabric]['vpc'][node_val['vpc']]['cloud'] %}
// Node: {{ node_key }}
module "{{ node_key }}" {
  source                 = "../modules/instance-aws"
  providers = {
    aws = "aws.{{ state['fabric'][fabric]['vpc'][node_val.vpc]['region'] }}"
  }
  instance_enable        = "true"
  region                 = "${var.aws_vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}_region}"
  instance_type          = "${var.aws_wkld_instance_type}"
  instance_disk_size     = "${var.aws_wkld_instance_disk_size}"
  {% set os_type = { 'value': '' } %}
  {% if 'os_type' in node_val['properties'] %}
  {% if node_val['properties']['os_type'] != 'ubuntu' %}
  {% if os_type.update({ 'value': node_val['properties']['os_type'] + '-' }) %}{% endif %}
  {% endif %}
  {% endif %}
  instance_ami_pattern   = "bayware-wkld-{{ os_type.value }}${local.image_suffix}${var.image_version}-"
  prefix                 = "{{ node_key }}"
  suffix                 = ""
  ansible_groups         = "${var.aws_wkld_ansible_groups}"
  description            = "${var.aws_wkld_description} {{ node_val['index'] }}"
  public_subnet_id       = "${var.aws_vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}_workload_subnet_enable == "true" ? module.networking-{{ fabric }}-vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}-aws.workload_subnet_id : var.aws_vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}_workload_subnet_id}"
  key_name               = "${module.security-{{ fabric }}-vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}-aws.key_name}"
  key_file               = "{{ pub_key }}"
  user_name              = "${var.ssh_user}"
  environment            = "{{ state['fabric'][fabric]['config']['companyName'] }}"
  vpc_id                 = "${var.aws_vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}_network_enable == "true" ? module.networking-{{ fabric }}-vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}-aws.vpc_id : var.aws_vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}_vpc_id}"
  sg_ids                 = [
    "${module.security-{{ fabric }}-vpc{{ state['fabric'][fabric]['vpc'][node_val['vpc']]['index'] }}-aws.sg_wkld_id}"
  ]
}

// DNS entry
module "{{ node_key }}-dns" {
  source                  = "../modules/dns-aws"
  dns_managed_zone_domain = "${var.dns_managed_zone_domain}"
  name                    = "{{ node_key }}.{{ state['fabric'][fabric]['config']['companyName'] }}"
  ip_address              = "${module.{{ node_key }}.public_ip}"
  dns_enable              = "{{ node_val['properties']['dns_enabled'] }}"
}

{% endif %}
{% endfor %}
{% endif %}
